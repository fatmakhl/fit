import 'package:gym/widgets/custom_text_form_field.dart';import 'package:gym/core/utils/validation_functions.dart';import 'package:gym/widgets/custom_elevated_button.dart';import 'models/create_a_password_model.dart';import 'package:flutter/material.dart';import 'package:gym/core/app_export.dart';import 'bloc/create_a_password_bloc.dart';
// ignore_for_file: must_be_immutable
class CreateAPasswordScreen extends StatelessWidget {CreateAPasswordScreen({Key? key}) : super(key: key, );

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<CreateAPasswordBloc>(create: (context) => CreateAPasswordBloc(CreateAPasswordState(createAPasswordModelObj: CreateAPasswordModel(), ))..add(CreateAPasswordInitialEvent()), child: CreateAPasswordScreen(), ); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: SizedBox(width: SizeUtils.width, child: SingleChildScrollView(padding: EdgeInsets.only(bottom: MediaQuery.of(context).viewInsets.bottom, ), child: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.only(left: 18.h, top: 94.v, right: 18.h, ), child: Column(crossAxisAlignment: CrossAxisAlignment.start, children: [Align(alignment: Alignment.center, child: Text("msg_create_a_password".tr, style: theme.textTheme.headlineSmall, ), ), SizedBox(height: 7.v), Container(width: 340.h, margin: EdgeInsets.symmetric(horizontal: 6.h), child: Text("msg_set_a_strong_password".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: theme.textTheme.bodyLarge, ), ), SizedBox(height: 30.v), Text("lbl_password".tr, style: theme.textTheme.titleMedium, ), SizedBox(height: 7.v), _buildPassword(context), SizedBox(height: 15.v), Text("msg_confirm_password".tr, style: theme.textTheme.titleMedium, ), SizedBox(height: 8.v), _buildConfirmpassword(context), SizedBox(height: 12.v), _buildSpecialCharacter(context), SizedBox(height: 12.v), _buildCharacter(context), SizedBox(height: 12.v), _buildNumber(context), SizedBox(height: 5.v)], ), ), ), ), ), bottomNavigationBar: _buildSubmit(context), ), ); } 
/// Section Widget
Widget _buildPassword(BuildContext context) { return BlocBuilder<CreateAPasswordBloc, CreateAPasswordState>(builder: (context, state) {return CustomTextFormField(controller: state.passwordController, hintText: "msg_enter_your_password".tr, hintStyle: theme.textTheme.bodyMedium!, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {context.read<CreateAPasswordBloc>().add(ChangePasswordVisibilityEvent(value: !state.isShowPassword));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 12.v, 12.h, 12.v), child: CustomImageView(imagePath: ImageConstant.imgIconOnprimarycontainer, height: 20.adaptSize, width: 20.adaptSize, ), ), ), suffixConstraints: BoxConstraints(maxHeight: 45.v, ), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword, contentPadding: EdgeInsets.only(left: 12.h, top: 12.v, bottom: 12.v, ), );}, ); } 
/// Section Widget
Widget _buildConfirmpassword(BuildContext context) { return BlocBuilder<CreateAPasswordBloc, CreateAPasswordState>(builder: (context, state) {return CustomTextFormField(controller: state.confirmpasswordController, hintText: "msg_confirm_password".tr, hintStyle: theme.textTheme.bodyMedium!, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {context.read<CreateAPasswordBloc>().add(ChangePasswordVisibilityEvent1(value: !state.isShowPassword1));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 12.v, 12.h, 12.v), child: CustomImageView(imagePath: ImageConstant.imgIconOnprimarycontainer, height: 20.adaptSize, width: 20.adaptSize, ), ), ), suffixConstraints: BoxConstraints(maxHeight: 45.v, ), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword1, contentPadding: EdgeInsets.only(left: 12.h, top: 12.v, bottom: 12.v, ), );}, ); } 
/// Section Widget
Widget _buildSpecialCharacter(BuildContext context) { return CustomElevatedButton(height: 25.v, width: 154.h, text: "msg_1_special_character".tr, leftIcon: Container(margin: EdgeInsets.only(right: 4.h), child: CustomImageView(imagePath: ImageConstant.imgMaterialsymbolsdone, height: 16.adaptSize, width: 16.adaptSize, ), ), buttonStyle: CustomButtonStyles.fillGrayTL10, buttonTextStyle: CustomTextStyles.labelLargeOnPrimaryContainer, ); } 
/// Section Widget
Widget _buildCharacter(BuildContext context) { return CustomElevatedButton(height: 25.v, width: 107.h, text: "lbl_1_character".tr, leftIcon: Container(margin: EdgeInsets.only(right: 4.h), child: CustomImageView(imagePath: ImageConstant.imgMaterialsymbolsdone, height: 16.adaptSize, width: 16.adaptSize, ), ), buttonStyle: CustomButtonStyles.fillGrayTL10, buttonTextStyle: CustomTextStyles.labelLargeOnPrimaryContainer, ); } 
/// Section Widget
Widget _buildNumber(BuildContext context) { return CustomElevatedButton(height: 25.v, width: 97.h, text: "lbl_1_number".tr, leftIcon: Container(margin: EdgeInsets.only(right: 4.h), child: CustomImageView(imagePath: ImageConstant.imgMaterialsymbolsdone, height: 16.adaptSize, width: 16.adaptSize, ), ), buttonStyle: CustomButtonStyles.fillGrayTL10, buttonTextStyle: CustomTextStyles.labelLargeOnPrimaryContainer, ); } 
/// Section Widget
Widget _buildSubmit(BuildContext context) { return CustomElevatedButton(text: "lbl_submit".tr, margin: EdgeInsets.only(left: 18.h, right: 18.h, bottom: 58.v, ), buttonTextStyle: CustomTextStyles.titleMediumGray5001Bold, onPressed: () {onTapSubmit(context);}, ); } 
/// Navigates to the createProfileScreen when the action is triggered.
onTapSubmit(BuildContext context) { NavigatorService.pushNamed(AppRoutes.createProfileScreen, ); } 
 }
